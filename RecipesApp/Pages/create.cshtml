@page "/user/CreateRecipe"
@inherits OwningComponentBase<IStoreRepository>

<EditForm Model="Product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    @if(Recipe.RecipeID != 0) {
        <div class="form-group">
            <label>ID</label>
            <input class="form-control" disabled value="@Recipe.RecipeID" />
        </div>
    }
    <div class="form-group">
        <label>Name</label>
        <ValidationMessage For="@(() => Recipe.Name)" />
        <InputText class="form-control" @bind-Value="Product.Name" />
    </div>
    <div class="form-group">
        <label>Description</label>
        <ValidationMessage For="@(() => Recipe.Description)" />
        <InputText class="form-control" @bind-Value="Product.Description" />
    </div>
    <div class="form-group">
        <label>Category</label>
        <ValidationMessage For="@(() => Recipe.Category)" />
        <InputText class="form-control" @bind-Value="Product.Category" />
    </div>
    <div class="form-group">
        <label>Price</label>
        <ValidationMessage For="@(() => Recipe.Price)" />
        <InputNumber class="form-control" @bind-Value="Product.Price" />
    </div>
    <div class="mt-2">
        <button type="submit" class="btn btn-@ThemeColor">Save</button>
        <NavLink class="btn btn-secondary" href="/admin/products">Cancel</NavLink>
    </div>
</EditForm>

@code {
    public IStoreRepository Repository => Service;

   [Parameter]
    public long Id { get; set; } = 0;

    public Product Product { get; set; } = new Product();

    protected override void OnParametersSet() {
        if (Id != 0) {
            Recipe = Repository.Recipe.FirstOrDefault(p => p.RecipeID == Id) 
                ?? new();
        }
    }

    public void SaveProduct() {
        if (Id == 0) {
            Repository.CreateRecipe(Recipe);
        } else {
            Repository.SaveProduct(Recipe);
        }
        NavManager?.NavigateTo("/user");
    }
}
